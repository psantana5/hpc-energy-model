# Prometheus Configuration for HPC Energy Model
# Comprehensive monitoring setup with alerting

global:
  scrape_interval: 15s
  evaluation_interval: 15s
  external_labels:
    cluster: 'hpc-energy'
    environment: 'production'

# Alertmanager configuration
alerting:
  alertmanagers:
    - static_configs:
        - targets:
          - alertmanager:9093
      timeout: 10s
      api_version: v2

# Rules files
rule_files:
  - "alert.rules.yml"
  - "recording.rules.yml"

# Scrape configurations
scrape_configs:
  # Prometheus itself
  - job_name: 'prometheus'
    static_configs:
      - targets: ['localhost:9090']
    scrape_interval: 30s
    metrics_path: /metrics

  # Node Exporter - System metrics
  - job_name: 'node-exporter'
    static_configs:
      - targets: ['node-exporter:9100']
    scrape_interval: 15s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: node-exporter:9100

  # Thermal Exporter - Temperature monitoring
  - job_name: 'thermal-exporter'
    static_configs:
      - targets: ['thermal-exporter:9101']
    scrape_interval: 10s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: job
        replacement: thermal-monitoring

  # Job Exporter - Slurm job metrics
  - job_name: 'job-exporter'
    static_configs:
      - targets: ['job-exporter:9102']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: job
        replacement: slurm-jobs

  # Energy API - Application metrics
  - job_name: 'energy-api'
    static_configs:
      - targets: ['api:5000']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: job
        replacement: energy-api

  # TimescaleDB - Database metrics
  - job_name: 'timescaledb'
    static_configs:
      - targets: ['postgres-exporter:9187']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: job
        replacement: timescaledb

  # Redis - Cache metrics
  - job_name: 'redis'
    static_configs:
      - targets: ['redis-exporter:9121']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: job
        replacement: redis

  # Grafana - Dashboard metrics
  - job_name: 'grafana'
    static_configs:
      - targets: ['grafana:3000']
    scrape_interval: 60s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: job
        replacement: grafana

  # Nginx - Reverse proxy metrics
  - job_name: 'nginx'
    static_configs:
      - targets: ['nginx:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: job
        replacement: nginx

  # Fluentd - Log aggregation metrics
  - job_name: 'fluentd'
    static_configs:
      - targets: ['fluentd:24231']
    scrape_interval: 60s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: job
        replacement: fluentd

  # Docker containers - Container metrics
  - job_name: 'docker'
    static_configs:
      - targets: ['cadvisor:8080']
    scrape_interval: 30s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: job
        replacement: docker-containers

  # Custom HPC metrics - Energy consumption
  - job_name: 'hpc-energy-custom'
    static_configs:
      - targets: ['energy-collector:9103']
    scrape_interval: 10s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: job
        replacement: hpc-energy

  # IPMI metrics - Hardware monitoring (if available)
  - job_name: 'ipmi'
    static_configs:
      - targets: ['ipmi-exporter:9290']
    scrape_interval: 60s
    metrics_path: /metrics
    relabel_configs:
      - source_labels: [__address__]
        target_label: instance
      - target_label: job
        replacement: ipmi-hardware

  # SNMP metrics - Network equipment (if available)
  - job_name: 'snmp'
    static_configs:
      - targets:
        - 192.168.1.1  # Router
        - 192.168.1.10 # Switch
    metrics_path: /snmp
    params:
      module: [if_mib]
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: snmp-exporter:9116

  # Blackbox exporter - Endpoint monitoring
  - job_name: 'blackbox'
    metrics_path: /probe
    params:
      module: [http_2xx]
    static_configs:
      - targets:
        - http://api:5000/health
        - http://grafana:3000/api/health
        - http://prometheus:9090/-/healthy
    relabel_configs:
      - source_labels: [__address__]
        target_label: __param_target
      - source_labels: [__param_target]
        target_label: instance
      - target_label: __address__
        replacement: blackbox-exporter:9115

# Remote write configuration (for long-term storage)
remote_write:
  - url: "http://thanos-receive:19291/api/v1/receive"
    queue_config:
      max_samples_per_send: 1000
      max_shards: 200
      capacity: 2500
    write_relabel_configs:
      - source_labels: [__name__]
        regex: 'go_.*'
        action: drop

# Remote read configuration
remote_read:
  - url: "http://thanos-query:9090/api/v1/query"
    read_recent: true

# Storage configuration
storage:
  tsdb:
    path: /prometheus/data
    retention.time: 30d
    retention.size: 10GB
    wal-compression: true
    min-block-duration: 2h
    max-block-duration: 25h

# Tracing configuration
tracing:
  endpoint: "jaeger:14268/api/traces"
  sampling_fraction: 0.1

# Feature flags
feature_flags:
  - promql-at-modifier
  - remote-write-receiver
  - exemplar-storage

# Runtime configuration
runtime_config:
  file: /etc/prometheus/runtime.yml